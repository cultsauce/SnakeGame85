#define WIDTH                           128
#define HEIGHT                          64
#define NUM_PAGES                       8
#define NUM_SEGMENTS                    13

#define I2C_ADDR                        0x3C
#define DATABYTE                        0x40
#define COMMANDBYTE                     0x00

#define SET_CONTRAST_CONTROL            0x81
#define ENTIRE_DISPLAY_ON_RAM_CONTENT   0xA4
#define ENTIRE_DISPLAY_ON               0xA5
#define NORMAL_DISPLAY                  0xA6
#define INVERT_DISPLAY                  0xA7
#define DISPLAY_OFF                     0xAE
#define DISPLAY_ON                      0xAF
#define MEMORY_ADDRESS_MODE             0x20
#define COLUMN_ADDRESS                  0x21
#define PAGE_ADDRESS                    0x22
#define DISPLAY_START_LINE              0x40
#define CHARGEPUMP                      0x8D
#define SEGMENT_REMAP                   0xA0
#define MULTIPLEX_RATIO                 0xA8
#define DEACTIVATE_SCROLL               0x2E
#define COM_SCAN_INCREASING             0xC0
#define COM_SCAN_DECREASING             0xC8
#define DISPLAY_OFFSET                  0xD3
#define CLOCK_DIV                       0xD5
#define PRE_CHARGE_PERIOD               0xD9
#define COM_PIN_HW_CONFIG               0xDA
#define V_COMH_DESELECT                 0xDB

const unsigned char LOAD_SCREEN []  PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x80,
0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x00, 0xC0, 0xC0, 0xC0, 0x80, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0x80,
0x00, 0x00, 0x00, 0xC0, 0x80, 0x80, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xC0, 0xC0,
0x80, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF0, 0xB8, 0x18, 0x18, 0x00,
0x00, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00, 0x00, 0xC0, 0xC0, 0x80, 0xC0, 0xC0, 0xC0,
0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x00, 0x80, 0xC0, 0xC0,
0xC0, 0xC0, 0x80, 0x00, 0x80, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0,
0x80, 0x00, 0x00, 0x80, 0xC0, 0xC0, 0xC0, 0xC0, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x3F, 0x30, 0x30, 0x30, 0x3F, 0x3F, 0x00, 0x00, 0x1F, 0x3F,
0x31, 0x30, 0x30, 0x3F, 0x1F, 0x06, 0x20, 0x30, 0xFF, 0xFF, 0x30, 0x20, 0x30, 0x30, 0xFF, 0xFF,
0x30, 0x00, 0x00, 0x3F, 0x3F, 0x00, 0x00, 0x01, 0x3F, 0x3F, 0x00, 0x0E, 0x1F, 0x3F, 0x30, 0x30,
0x30, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x3F, 0x07, 0x01, 0x0F, 0x3E, 0x30, 0x00,
0x00, 0x3F, 0x3F, 0x30, 0x30, 0x10, 0x3F, 0x3F, 0x00, 0x00, 0x1F, 0x3F, 0x34, 0x24, 0x36, 0x33,
0x03, 0x00, 0x00, 0x00, 0x00, 0x01, 0x33, 0x37, 0x26, 0x3C, 0x3C, 0x00, 0x00, 0x33, 0x37, 0x26,
0x3C, 0x3C, 0x18, 0x00, 0x1C, 0x3C, 0x34, 0x24, 0x35, 0x3F, 0x0F, 0x20, 0x30, 0x30, 0x1F, 0x3F,
0x3F, 0x00, 0x0E, 0x3F, 0x3F, 0x30, 0x30, 0x30, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x60, 0x20, 0x60,
0x40, 0xC0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x60, 0x20, 0x60, 0x40, 0xC0,
0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80,
0xC0, 0x40, 0x60, 0x20, 0x60, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xC0, 0x40,
0x60, 0x20, 0x60, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0xC3, 0x42, 0x66,
0x24, 0x34, 0x1C, 0x99, 0x99, 0xC3, 0x42, 0x66, 0x24, 0x3C, 0x81, 0xC3, 0x42, 0x66, 0x24, 0x34,
0x1C, 0x99, 0x99, 0xC3, 0x42, 0x66, 0x24, 0x3C, 0x3C, 0x26, 0x22, 0x22, 0x22, 0x22, 0x22, 0x3E,
0x3C, 0x26, 0x22, 0x22, 0x22, 0x22, 0x22, 0x3E, 0x3C, 0x26, 0x22, 0x22, 0x22, 0x22, 0x22, 0x3E,
0x3C, 0x26, 0x22, 0x22, 0x22, 0x22, 0x22, 0x3E, 0x3C, 0x26, 0x22, 0x22, 0x22, 0x22, 0x22, 0x3E,
0x3C, 0x26, 0x22, 0x22, 0x22, 0x22, 0x22, 0x3E, 0x3C, 0x24, 0x66, 0x42, 0xC3, 0x99, 0x99, 0x1C,
0x34, 0x24, 0x66, 0x42, 0xC3, 0x81, 0x3C, 0x24, 0x66, 0x42, 0xC3, 0x99, 0x99, 0x1C, 0x34, 0x24,
0x66, 0x42, 0xC3, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x06, 0x04, 0x06,
0x02, 0x03, 0x01, 0x01, 0x80, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC3, 0xC6, 0xC4, 0xC6, 0xC2, 0xC3,
0xC1, 0x81, 0x80, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x00, 0x80, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x80, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x00, 0x80, 0xC0, 0xC0, 0xC0, 0xC0,
0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x00, 0x00, 0x01, 0x01,
0x03, 0x82, 0xC6, 0xC4, 0xC6, 0xC3, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x81, 0x01, 0x03, 0x02,
0x06, 0x04, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x0F, 0x9F, 0xF0, 0x78, 0x78, 0x78, 0x78, 0x70, 0x78, 0x70, 0x00, 0x00, 0x00,
0x00, 0xFF, 0xFF, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC0, 0x81, 0x03, 0x06, 0x0C, 0x1E, 0x3F, 0x21,
0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x1F, 0xF8, 0xE0, 0x00, 0x00, 0x01, 0x07, 0x06, 0x86, 0x86,
0x86, 0x86, 0x07, 0x07, 0x00, 0x00, 0x80, 0xF0, 0x7C, 0x0F, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
0x80, 0x01, 0x07, 0x1E, 0x78, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x70, 0xFC, 0x8E,
0x03, 0x01, 0x00, 0x00, 0x30, 0x78, 0x78, 0x78, 0x78, 0xD8, 0xF0, 0xB0, 0x61, 0x3F, 0x1E, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0xC7, 0xEF, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x00, 0x00, 0x00,
0x00, 0xFF, 0xFF, 0x00, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x0D, 0x07, 0x82, 0xC0, 0xE0, 0xF0, 0x10,
0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x07, 0x1F, 0xF8, 0xE0, 0x00, 0x00, 0x01, 0x0F,
0x07, 0x00, 0x00, 0x80, 0xF0, 0x7C, 0x0F, 0x03, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
0xFF, 0xFE, 0x38, 0xF0, 0xC0, 0x01, 0x07, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0xC1, 0xE3,
0x36, 0x1E, 0x3C, 0x3C, 0x38, 0x38, 0x38, 0x38, 0x30, 0x00, 0x00, 0x01, 0x83, 0xFE, 0x7C, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0x07, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,
0x0C, 0x07, 0x03, 0x07, 0x0D, 0x0C, 0x0C, 0x0C, 0x0C, 0x06, 0x03, 0x01, 0x00, 0x01, 0x03, 0x06,
0x0C, 0x0C, 0x0C, 0x0C, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x07, 0x0C, 0x0C, 0x0C,
0x0C, 0x0C, 0x06, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x06, 0x0C, 0x0C, 0x0C, 0x06,
0x03, 0x01, 0x00, 0x00, 0x01, 0x03, 0x06, 0x0C, 0x0C, 0x0C, 0x0C, 0x07, 0x03, 0x00, 0x00, 0x01,
0x03, 0x06, 0x06, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x06, 0x06, 0x03, 0x01, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char SCORE [] PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x40, 0x60, 0x20, 0xB0, 0x90, 0xD8, 0x48, 0x68, 0x28, 0xF8,
0x40, 0x40, 0x40, 0x40, 0x40, 0xC0, 0x40, 0x40, 0x40, 0x40, 0x40, 0xC0, 0x40, 0x40, 0x40, 0x40,
0x40, 0xC0, 0x40, 0x40, 0x40, 0x40, 0x40, 0xC0, 0x40, 0x40, 0x40, 0x40, 0x40, 0xC0, 0x40, 0x40,
0x40, 0x40, 0x40, 0xC0, 0xC0, 0x60, 0x20, 0x30, 0x90, 0x98, 0xC8, 0x48, 0x68, 0x38, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x02, 0x06, 0x04, 0x0C, 0x09, 0x19, 0x13, 0x12, 0x16, 0x1D,
0x03, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x02, 0x02, 0x02,
0x02, 0x03, 0x03, 0x02, 0x02, 0x02, 0x02, 0x03, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x02, 0x02,
0x02, 0x02, 0x02, 0x03, 0x03, 0x02, 0x06, 0x04, 0x0D, 0x09, 0x1B, 0x12, 0x16, 0x1C, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0xEC, 0xC4, 0xC4, 0xC4, 0xC4, 0x04, 0x04, 0x0C,
0xF8, 0x3C, 0xE4, 0x84, 0x0C, 0x18, 0x70, 0xF8, 0x0C, 0x04, 0x04, 0xFC, 0xC0, 0x70, 0x18, 0x08,
0x8C, 0xC4, 0x64, 0x44, 0xCC, 0x08, 0x18, 0x30, 0xE0, 0x78, 0x4C, 0x44, 0x64, 0x44, 0xC4, 0x8C,
0x08, 0x18, 0x70, 0xC0, 0xF8, 0x08, 0x0C, 0x44, 0xE4, 0xE4, 0xC4, 0xCC, 0x48, 0x78, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xDF, 0x8C, 0xCC, 0x8C, 0x8C, 0x80, 0x80, 0xC0,
0x7F, 0x00, 0x3E, 0x63, 0x40, 0x40, 0xCC, 0x8C, 0x80, 0x80, 0x80, 0xFF, 0x0F, 0x38, 0x60, 0x40,
0xC7, 0x8C, 0x98, 0x88, 0xCF, 0x40, 0x60, 0x30, 0x1F, 0x78, 0xC8, 0x88, 0x98, 0x88, 0x8C, 0xC7,
0x40, 0x60, 0x38, 0x0F, 0x7B, 0x4E, 0xCC, 0x8C, 0x9C, 0x88, 0xC0, 0x41, 0x63, 0x3E, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x40, 0x60, 0x20, 0xB0, 0x90, 0x98, 0xC8, 0x48, 0x68, 0xF8,
0x40, 0x40, 0x40, 0x40, 0x40, 0xC0, 0x40, 0x40, 0x40, 0x40, 0x40, 0xC0, 0x40, 0x40, 0x40, 0x40,
0x40, 0xC0, 0x40, 0x40, 0x40, 0x40, 0x40, 0xC0, 0x40, 0x40, 0x40, 0x40, 0x40, 0xC0, 0x40, 0x40,
0x40, 0x40, 0x40, 0xC0, 0xC0, 0x60, 0x20, 0x30, 0x90, 0x90, 0xD8, 0x48, 0x68, 0x38, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x02, 0x06, 0x04, 0x0D, 0x09, 0x19, 0x13, 0x12, 0x16, 0x1D,
0x03, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x02, 0x02, 0x02, 0x02, 0x03, 0x02, 0x02, 0x02, 0x02,
0x02, 0x03, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x02, 0x02,
0x02, 0x02, 0x02, 0x03, 0x03, 0x06, 0x04, 0x0C, 0x09, 0x19, 0x13, 0x12, 0x16, 0x1C, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


const uint8_t init_commands_list[] PROGMEM = {
    DISPLAY_OFF,         
    CLOCK_DIV, 
    0x80,                       
    MULTIPLEX_RATIO,
    HEIGHT - 1,
    DISPLAY_OFFSET,   
    0x00,                        
    DISPLAY_START_LINE, 
    0x00, 
    CHARGEPUMP,
    0x14,
    MEMORY_ADDRESS_MODE, 
    0x00,               
    SEGMENT_REMAP, 
    0xA1,
    COM_SCAN_DECREASING,
    COM_PIN_HW_CONFIG,
    0x12,
    SET_CONTRAST_CONTROL,
    0xCF,
    PRE_CHARGE_PERIOD,
    0xF1,
    V_COMH_DESELECT, 
    0x40,
    ENTIRE_DISPLAY_ON_RAM_CONTENT, 
    NORMAL_DISPLAY,       
    DEACTIVATE_SCROLL,
    DISPLAY_ON
    };

#ifndef SNK85
#define SNK85

class OLED85
{
  private:
    void commandList(uint8_t len, const uint8_t init_commands_list []);
    void setColAddr(uint8_t addr_start, uint8_t addr_stop);
    void setPageAddr(uint8_t addr_start, uint8_t addr_stop);
    void sendCommand(uint8_t command);
    void sendData(uint8_t data);
    
    
    
  public:
    OLED85();
    
    void fillScreen(uint8_t data);
    void drawPixel(uint8_t x, uint8_t y); // for drawing the snake
    void drawBlock(uint8_t x, uint8_t y);  // for displaying final score
    void drawGrid();
    void removePixel(uint8_t x, uint8_t y);
    void blinkScreen(uint8_t n);
    void drawImage(const uint8_t img[], uint8_t blank_half = 0);
    void displayScore(uint8_t score);
};

#endif //SNK85
